<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
			version="4.0">

	<!-- 
	프로젝트를 실행하면 home.jsp가 실행된다. 
	이것은 컨트롤러의 맵핑을 거쳐 실행되는데, 
		서버를 실행하고 컨트롤러에 들어갔다가 다시 jsp로 가는 건 비효율적이고 우리가 제어하기 힘들다. 
	따라서 서블릿을 통해서 프로젝트가 실행되면 index.jsp가 실행되도록 만들어보자.
	
	webapp폴더 밑에 index.jsp 추가
	WEB-INF 밑에 있는 jsp는 보안상 바로 접근할 수 없다. 
	컨트롤러를 통해(요청패턴을 통해) 접근을 할 수 있다. 
	하지만 webapp밑에 있는 파일들은 주소만 치면 바로 들어갈 수 있다. 
	그래서 단순 주소만으로 접근 가능하게 index.jsp를 만들고 그 다음부터 컨트롤러를 통해 접근하게 만드는 것이다.
	
	<webapp></webapp>태그 안에 아무곳에나 넣어줘도 된다. 
	나는 맨 위에 뒀다. 
	이렇게 설정하면 서버가 실행되면서 web.xml에서 welcome-file을 읽어서 webapp에 있는 index.jsp가 실행된다. 
	 -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/context-*.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/appServlet/*-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 
		<webapp></webapp> 태그 안에 아무곳에나 넣어줘도 된다. 나는 맨 밑에 넣어줬다.
		- 13행 : 서블릿 설정을 변경할 때 요청 url 패턴을 변경한 것과 똑같은 걸로 해줘야 한다. 만약 서블릿의 요청 url을 *.do로 했다면 13행의 url 패턴을 *.do로 해줘야 한다.
	 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
				org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>
